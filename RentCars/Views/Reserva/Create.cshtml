@using Core.Application.ViewModel.Vehiculo
@model Core.Application.ViewModel.Reserva.SaveReservaViewModel

@{
    ViewData["Title"] = "Create";
    var precioTotal = ViewBag.PrecioTotal;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reserva Vehículo</title>
    <script src="https://www.paypal.com/sdk/js?client-id=AagbCIQ7cBGAhnmIxDEco7jFeloSNWdd-PCI0gP9iPyW8Fm3YomiVSxOs662sthMIg_jDFTzCpmbbJai&buyer-country=US&currency=USD&components=buttons&enable-funding=paylater,card"
            data-sdk-integration-source="developer-studio"></script>

    <!-- Incluir el CSS de Leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

    <!-- Incluir el CSS del complemento Leaflet Control Geocoder -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />

    <!-- Incluir el JS de Leaflet -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <!-- Incluir el JS del complemento Leaflet Control Geocoder -->
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <style>
        :root {
            --primary-color: #1e2a3a;
            --secondary-color: #f0f0f0;
            --text-color: #333;
            --light-text: #666;
            --border-color: #ddd;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: #f9f9f9;
        }

        .container {
            max-width: 1200px;
            margin: auto;
            margin-top: 50px;
            padding: 20px;
        }

        .right-column {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .booking-card {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 30px;
            text-align: center;
        }

        .booking-title {
            font-size: 1.5rem;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .form-label {
            font-size: 1rem;
            font-weight: 600;
            color: var(--primary-color);
            margin-bottom: 8px;
            display: block;
            text-align: left;
        }

        .date-picker {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid var(--border-color);
            border-radius: 4px;
        }

        .price {
            font-size: 1.8rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .price-details {
            color: var(--light-text);
            font-size: 0.9rem;
            margin-bottom: 20px;
        }

        .book-button {
            width: 100%;
            padding: 12px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .book-button:hover {
                background-color: #096b36;
            }

        #map {
            margin-bottom: 20px;
            height: 400px;
        }

        #paypal-button-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 20px auto;
            width: 100%;
            max-width: 600px;
            text-align: center;
        }
    </style>
</head>
<body>
    @foreach (VehiculoViewModel item in ViewBag.Vehiculos)
    {
        <div class="container">
            <div class="right-column">
                <div class="booking-card">
                    <h2 class="booking-title">Reserva ahora</h2>
                    <form id="booking-form" asp-action="Create">
                        <input asp-for="UsuarioId" type="hidden" />
                        <input asp-for="VehiculoId" type="hidden" />
                        <input asp-for="PrecioTotal" type="hidden" />
                        <h2 class="booking-title">Reserva tu @item.Marca @item.Modelo</h2>
                        <p>Selecciona las fechas de recogida y devolución</p>

                        <!-- Fecha de inicio -->
                        <label for="fechaInicio" class="form-label">Fecha de Recogida</label>
                        <input type="date" asp-for="FechaInicio" class="date-picker" aria-label="Fecha de recogida" id="fechaInicio" onchange="setMinFechaFin()" />

                        <!-- Fecha de fin -->
                        <label for="fechaFin" class="form-label">Fecha de Devolución</label>
                        <input type="date" asp-for="FechaFin" class="date-picker" aria-label="Fecha de devolución" id="fechaFin" />

                        <!-- Cédula del usuario -->
                        <label for="Cedula" class="form-label">Cédula del Usuario (SIN GUIONES)</label>
                        <input asp-for="Cedula" class="form-control date-picker" aria-label="Cédula del usuario" id="Cedula" maxlength="13" oninput="formatCedula()" />
                        <span id="cedulaError" style="color: red; display:none;">Formato inválido. Ejemplo: 123-1234567-5</span>

                        <!-- Número de licencia -->
                        <label for="NumeroLicencia" class="form-label">Número de Licencia (SIN GUIONES)</label>
                        <input asp-for="NumeroLincencia" class="form-control  date-picker" aria-label="Número de licencia del usuario" id="NumeroLicencia" maxlength="10" oninput="formatLicencia()" />
                        <span id="licenciaError" style="color: red; display:none;">Formato inválido. Ejemplo: Prefijo12345678</span>

                        <!-- Latitud -->
                        <label for="Latitud" class="form-label">Latitud</label>
                        <input asp-for="Latitud" id="Latitud" class="date-picker" aria-label="Latitud" readonly />

                        <!-- Longitud -->
                        <label for="Longitud" class="form-label">Longitud</label>
                        <input asp-for="Longitud" id="Longitud" class="date-picker" aria-label="Longitud" readonly />

                        <!-- Mapa -->
                        <div id="map" style="height: 400px;"></div>

                        <!-- Precio -->
                        <p class="price">@item.PrecioPorDia / día</p>

                        <div id="paypal-button-container"></div>
                    </form>
                </div>
            </div>
        </div>
    }

    <script>
        // Función para formatear y validar el número de licencia
        function formatLicencia() {
            var input = document.getElementById("NumeroLicencia");
            var value = input.value;

            // Eliminar cualquier carácter no alfanumérico
            value = value.replace(/[^A-Za-z0-9]/g, '');

            // Limitar la longitud a 10 caracteres (incluyendo el prefijo)
            if (value.length > 10) {
                value = value.substring(0, 10);
            }

            // Asegurarse de que el prefijo está correcto y los siguientes 8 caracteres sean números
            if (value.length > 2 && !/^[A-Za-z]{2}/.test(value)) {
                value = 'LD' + value.substring(2); // Si el prefijo no es válido, lo corregimos
            }

            // Establecer el valor en el campo de entrada
            input.value = value;

            // Validar que el valor tenga el formato correcto (prefijo + 8 dígitos)
            var isValid = /^[A-Za-z]{2}\d{8}$/.test(value);

            // Mostrar u ocultar el mensaje de error
            if (isValid) {
                document.getElementById("licenciaError").style.display = "none"; // Ocultar el error si es válido
            } else {
                document.getElementById("licenciaError").style.display = "inline"; // Mostrar el error si no es válido
            }
        }
        function formatCedula() {
            var input = document.getElementById("Cedula");
            var value = input.value.replace(/\D/g, ''); // Elimina todo lo que no sea un número (solo dígitos)

            if (value.length <= 3) {
                input.value = value; // Solo los primeros 3 dígitos
            } else if (value.length <= 10) {
                input.value = value.slice(0, 3) + '-' + value.slice(3); // Formato: 123-123456
            } else {
                input.value = value.slice(0, 3) + '-' + value.slice(3, 10) + '-' + value.slice(10, 11); // Formato: 123-1234567-5
            }

            // Verificar si el valor tiene el formato correcto
            if (value.length === 11) {
                document.getElementById("cedulaError").style.display = "none"; // Ocultar error si es correcto
            } else {
                document.getElementById("cedulaError").style.display = "inline"; // Mostrar error si no tiene el formato correcto
            }
        }
        var map = L.map('map').setView([18.7357, -70.1627], 13);  // Coordenadas de República Dominicana

        // Cargar los datos de OpenStreetMap (con las etiquetas de calles visibles)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Agregar un marcador en la ubicación inicial
        var marker = L.marker([18.7357, -70.1627]).addTo(map);
        marker.bindPopup("Selecciona una ubicación").openPopup();

        function obtenerDireccion(lat, lon) {
            var url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json&addressdetails=1`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    var direccion = data.display_name;  // Dirección completa
                    marker.bindPopup(`<b>Ubicación Seleccionada</b><br>${direccion}`).openPopup();
                })
                .catch(error => {
                    console.error('Error al obtener la dirección:', error);
                });
        }



        // Evento de clic en el mapa
        map.on('click', function (event) {
            var lat = event.latlng.lat;
            var lon = event.latlng.lng;

            // Mover el marcador
            marker.setLatLng(event.latlng);

            // Actualizar los campos en el formulario
            document.getElementById('Latitud').value = lat;
            document.getElementById('Longitud').value = lon;

            obtenerDireccion(lat, lon);
        });

        // Agregar el buscador de direcciones
        L.Control.geocoder().addTo(map);  // Agrega el control de geocodificación (buscador de direcciones)

        window.paypal.Buttons({
            style: {
                shape: "rect",
                layout: "vertical",
                color: "gold",
                label: "paypal",
            },

            createOrder: function (data, actions) {
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: 100  // Aquí deberías poner el precio dinámico
                        }
                    }]
                });
            },

            onApprove: function (data, actions) {
                document.getElementById("booking-form").submit();
                actions.order.capture().then(function (details) {
                    console.log("Pago aprobado:", details);
                });
            },

            onCancel: function (data) {
                alert("El pago ha sido cancelado.");
                console.log(data);
            }
        }).render("#paypal-button-container");  // Renderiza el botón de PayPal
    </script>
</body>
</html>
